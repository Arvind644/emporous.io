<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UOR Framework – Objects</title>
    <link>/docs/objects/</link>
    <description>Recent content in Objects on UOR Framework</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/objects/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Types</title>
      <link>/docs/objects/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/objects/types/</guid>
      <description>
        
        
        &lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;UOR Typed Data follows similar rudimentary conventions to classical typed programming language concepts. Data types may be directly actionable objects, or may convey abstracts of other real objects or abstract concepts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this way UOR Typed Objects are a way to express any data, idea, or real world object and associate it with attributes and actions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Objects may be of class &amp;#39;object&amp;#39; or of class &amp;#39;meta&amp;#39;. Object class objects are directly actionable by either read or execute actions. Meta class objects are objects that are not directly actionable, but are used to describe other objects.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Anatomy</title>
      <link>/docs/objects/anatomy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/objects/anatomy/</guid>
      <description>
        
        
        &lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;UOR Objects are assembled datasets of the following components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attributes&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Label&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Affinity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Taint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dependency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Association&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ownership&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mode&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specification&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instruction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Index&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Matrix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Schema&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attestation Manifest&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Git / Source&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verification&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Data component is the primary actionable content of the UOR Object.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Attributes component is a set of attributes that describe the data’s properties and corelation anchors.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Specification component describes the methods of reading or acting on the data and dependencies.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Attestation Manifest component is a set of statements that attest to the data’s origins and integrity.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
